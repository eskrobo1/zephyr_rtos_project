/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/emina/zephyr_rtos/03_zephyr-thread-synchronization/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /psci
 *   4   /soc
 *   5   /soc/interrupt-controller@8000000
 *   6   /timer
 *   7   /cpus
 *   8   /cpus/cpu@0
 *   9   /cpus/cpu@1
 *   10  /soc/flash@0
 *   11  /soc/memory@40000000
 *   12  /apb-pclk
 *   13  /soc/uart@9000000
 *   14  /soc/virtio_mmio@a000000
 *   15  /soc/virtio_mmio@a000200
 *   16  /soc/virtio_mmio@a000400
 *   17  /soc/virtio_mmio@a000600
 *   18  /soc/virtio_mmio@a000800
 *   19  /soc/virtio_mmio@a000a00
 *   20  /soc/virtio_mmio@a000c00
 *   21  /soc/virtio_mmio@a000e00
 *   22  /soc/virtio_mmio@a001000
 *   23  /soc/virtio_mmio@a001200
 *   24  /soc/virtio_mmio@a001400
 *   25  /soc/virtio_mmio@a001600
 *   26  /soc/virtio_mmio@a001800
 *   27  /soc/virtio_mmio@a001a00
 *   28  /soc/virtio_mmio@a001c00
 *   29  /soc/virtio_mmio@a001e00
 *   30  /soc/virtio_mmio@a002000
 *   31  /soc/virtio_mmio@a002200
 *   32  /soc/virtio_mmio@a002400
 *   33  /soc/virtio_mmio@a002600
 *   34  /soc/virtio_mmio@a002800
 *   35  /soc/virtio_mmio@a002a00
 *   36  /soc/virtio_mmio@a002c00
 *   37  /soc/virtio_mmio@a002e00
 *   38  /soc/virtio_mmio@a003000
 *   39  /soc/virtio_mmio@a003200
 *   40  /soc/virtio_mmio@a003400
 *   41  /soc/virtio_mmio@a003600
 *   42  /soc/virtio_mmio@a003800
 *   43  /soc/virtio_mmio@a003a00
 *   44  /soc/virtio_mmio@a003c00
 *   45  /soc/virtio_mmio@a003e00
 *   46  /soc/interrupt-controller@8000000/its@8080000
 *   47  /soc/pcie@4010000000
 *   48  /soc/pcie@4010000000/pcie@1,0
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 7
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_timer) fn(DT_N_S_apb_pclk) fn(DT_N_S_psci)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_apb_pclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_psci)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_timer, __VA_ARGS__) fn(DT_N_S_apb_pclk, __VA_ARGS__) fn(DT_N_S_psci, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_apb_pclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_psci, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_timer) fn(DT_N_S_apb_pclk) fn(DT_N_S_psci)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_apb_pclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_psci)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_timer, __VA_ARGS__) fn(DT_N_S_apb_pclk, __VA_ARGS__) fn(DT_N_S_psci, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_apb_pclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_psci, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /psci */ \
	4, /* /soc */ \
	6, /* /timer */ \
	7, /* /cpus */ \
	12, /* /apb-pclk */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_qemu_arm_cortex_a53 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_qemu_arm_cortex_a53 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "QEMU, a generic and open source machine emulator and virtualizer"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "arm-cortex-a53"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"qemu,arm-cortex-a53"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "qemu,arm-cortex-a53"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED qemu,arm-cortex-a53
#define DT_N_P_compatible_IDX_0_STRING_TOKEN qemu_arm_cortex_a53
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN QEMU_ARM_CORTEX_A53
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /psci
 *
 * Node identifier: DT_N_S_psci
 *
 * Binding (compatible = arm,psci-0.2):
 *   $ZEPHYR_BASE/dts/bindings/pm_cpu_ops/arm,psci-0.2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_psci_PATH "/psci"

/* Node's name with unit-address: */
#define DT_N_S_psci_FULL_NAME "psci"
#define DT_N_S_psci_FULL_NAME_UNQUOTED psci
#define DT_N_S_psci_FULL_NAME_TOKEN psci
#define DT_N_S_psci_FULL_NAME_UPPER_TOKEN PSCI

/* Node parent (/) identifier: */
#define DT_N_S_psci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_psci_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_psci_NODELABEL_NUM 0
#define DT_N_S_psci_FOREACH_NODELABEL(fn) 
#define DT_N_S_psci_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_psci_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_psci_CHILD_NUM 0
#define DT_N_S_psci_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_psci_FOREACH_CHILD(fn) 
#define DT_N_S_psci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_psci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_psci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_psci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_psci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_psci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_psci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_psci_HASH Ycog1kYtDZMdSKPWWM_MZyxTWQzv7kCmp15g8_hTRxE

/* Node's dependency ordinal: */
#define DT_N_S_psci_ORD 3
#define DT_N_S_psci_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_psci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_psci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_psci_EXISTS 1
#define DT_N_INST_0_arm_psci_0_2 DT_N_S_psci

/* Macros for properties that are special in the specification: */
#define DT_N_S_psci_REG_NUM 0
#define DT_N_S_psci_RANGES_NUM 0
#define DT_N_S_psci_FOREACH_RANGE(fn) 
#define DT_N_S_psci_IRQ_NUM 0
#define DT_N_S_psci_IRQ_LEVEL 0
#define DT_N_S_psci_COMPAT_MATCHES_arm_psci_0_2 1
#define DT_N_S_psci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_psci_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_psci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_psci_COMPAT_MODEL_IDX_0 "psci-0.2"
#define DT_N_S_psci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_psci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_psci_P_method "hvc"
#define DT_N_S_psci_P_method_STRING_UNQUOTED hvc
#define DT_N_S_psci_P_method_STRING_TOKEN hvc
#define DT_N_S_psci_P_method_STRING_UPPER_TOKEN HVC
#define DT_N_S_psci_P_method_IDX_0 "hvc"
#define DT_N_S_psci_P_method_IDX_0_EXISTS 1
#define DT_N_S_psci_P_method_IDX_0_ENUM_IDX 1
#define DT_N_S_psci_P_method_IDX_0_ENUM_VAL_hvc_EXISTS 1
#define DT_N_S_psci_P_method_ENUM_VAL_hvc_EXISTS 1
#define DT_N_S_psci_P_method_FOREACH_PROP_ELEM(fn) fn(DT_N_S_psci, method, 0)
#define DT_N_S_psci_P_method_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_psci, method, 0)
#define DT_N_S_psci_P_method_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_psci, method, 0, __VA_ARGS__)
#define DT_N_S_psci_P_method_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_psci, method, 0, __VA_ARGS__)
#define DT_N_S_psci_P_method_LEN 1
#define DT_N_S_psci_P_method_EXISTS 1
#define DT_N_S_psci_P_compatible {"arm,psci-0.2"}
#define DT_N_S_psci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_psci_P_compatible_IDX_0 "arm,psci-0.2"
#define DT_N_S_psci_P_compatible_IDX_0_STRING_UNQUOTED arm,psci-0.2
#define DT_N_S_psci_P_compatible_IDX_0_STRING_TOKEN arm_psci_0_2
#define DT_N_S_psci_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_PSCI_0_2
#define DT_N_S_psci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_psci, compatible, 0)
#define DT_N_S_psci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_psci, compatible, 0)
#define DT_N_S_psci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_psci, compatible, 0, __VA_ARGS__)
#define DT_N_S_psci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_psci, compatible, 0, __VA_ARGS__)
#define DT_N_S_psci_P_compatible_LEN 1
#define DT_N_S_psci_P_compatible_EXISTS 1
#define DT_N_S_psci_P_zephyr_deferred_init 0
#define DT_N_S_psci_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_psci_P_wakeup_source 0
#define DT_N_S_psci_P_wakeup_source_EXISTS 1
#define DT_N_S_psci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_psci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 37
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 5
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000) fn(DT_N_S_soc_S_uart_9000000) fn(DT_N_S_soc_S_flash_0) fn(DT_N_S_soc_S_pcie_4010000000) fn(DT_N_S_soc_S_memory_40000000) fn(DT_N_S_soc_S_virtio_mmio_a000000) fn(DT_N_S_soc_S_virtio_mmio_a000200) fn(DT_N_S_soc_S_virtio_mmio_a000400) fn(DT_N_S_soc_S_virtio_mmio_a000600) fn(DT_N_S_soc_S_virtio_mmio_a000800) fn(DT_N_S_soc_S_virtio_mmio_a000a00) fn(DT_N_S_soc_S_virtio_mmio_a000c00) fn(DT_N_S_soc_S_virtio_mmio_a000e00) fn(DT_N_S_soc_S_virtio_mmio_a001000) fn(DT_N_S_soc_S_virtio_mmio_a001200) fn(DT_N_S_soc_S_virtio_mmio_a001400) fn(DT_N_S_soc_S_virtio_mmio_a001600) fn(DT_N_S_soc_S_virtio_mmio_a001800) fn(DT_N_S_soc_S_virtio_mmio_a001a00) fn(DT_N_S_soc_S_virtio_mmio_a001c00) fn(DT_N_S_soc_S_virtio_mmio_a001e00) fn(DT_N_S_soc_S_virtio_mmio_a002000) fn(DT_N_S_soc_S_virtio_mmio_a002200) fn(DT_N_S_soc_S_virtio_mmio_a002400) fn(DT_N_S_soc_S_virtio_mmio_a002600) fn(DT_N_S_soc_S_virtio_mmio_a002800) fn(DT_N_S_soc_S_virtio_mmio_a002a00) fn(DT_N_S_soc_S_virtio_mmio_a002c00) fn(DT_N_S_soc_S_virtio_mmio_a002e00) fn(DT_N_S_soc_S_virtio_mmio_a003000) fn(DT_N_S_soc_S_virtio_mmio_a003200) fn(DT_N_S_soc_S_virtio_mmio_a003400) fn(DT_N_S_soc_S_virtio_mmio_a003600) fn(DT_N_S_soc_S_virtio_mmio_a003800) fn(DT_N_S_soc_S_virtio_mmio_a003a00) fn(DT_N_S_soc_S_virtio_mmio_a003c00) fn(DT_N_S_soc_S_virtio_mmio_a003e00)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_9000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcie_4010000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000a00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000e00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001a00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001e00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002a00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002e00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003a00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003e00)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003e00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000a00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a000e00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001a00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a001e00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002a00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a002e00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003a00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_virtio_mmio_a003e00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000) fn(DT_N_S_soc_S_uart_9000000) fn(DT_N_S_soc_S_flash_0) fn(DT_N_S_soc_S_pcie_4010000000) fn(DT_N_S_soc_S_memory_40000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_9000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcie_4010000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@8000000 */ \
	10, /* /soc/flash@0 */ \
	11, /* /soc/memory@40000000 */ \
	13, /* /soc/uart@9000000 */ \
	14, /* /soc/virtio_mmio@a000000 */ \
	15, /* /soc/virtio_mmio@a000200 */ \
	16, /* /soc/virtio_mmio@a000400 */ \
	17, /* /soc/virtio_mmio@a000600 */ \
	18, /* /soc/virtio_mmio@a000800 */ \
	19, /* /soc/virtio_mmio@a000a00 */ \
	20, /* /soc/virtio_mmio@a000c00 */ \
	21, /* /soc/virtio_mmio@a000e00 */ \
	22, /* /soc/virtio_mmio@a001000 */ \
	23, /* /soc/virtio_mmio@a001200 */ \
	24, /* /soc/virtio_mmio@a001400 */ \
	25, /* /soc/virtio_mmio@a001600 */ \
	26, /* /soc/virtio_mmio@a001800 */ \
	27, /* /soc/virtio_mmio@a001a00 */ \
	28, /* /soc/virtio_mmio@a001c00 */ \
	29, /* /soc/virtio_mmio@a001e00 */ \
	30, /* /soc/virtio_mmio@a002000 */ \
	31, /* /soc/virtio_mmio@a002200 */ \
	32, /* /soc/virtio_mmio@a002400 */ \
	33, /* /soc/virtio_mmio@a002600 */ \
	34, /* /soc/virtio_mmio@a002800 */ \
	35, /* /soc/virtio_mmio@a002a00 */ \
	36, /* /soc/virtio_mmio@a002c00 */ \
	37, /* /soc/virtio_mmio@a002e00 */ \
	38, /* /soc/virtio_mmio@a003000 */ \
	39, /* /soc/virtio_mmio@a003200 */ \
	40, /* /soc/virtio_mmio@a003400 */ \
	41, /* /soc/virtio_mmio@a003600 */ \
	42, /* /soc/virtio_mmio@a003800 */ \
	43, /* /soc/virtio_mmio@a003a00 */ \
	44, /* /soc/virtio_mmio@a003c00 */ \
	45, /* /soc/virtio_mmio@a003e00 */ \
	47, /* /soc/pcie@4010000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@8000000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_8000000
 *
 * Binding (compatible = arm,gic-v3):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,gic-v3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_8000000_PATH "/soc/interrupt-controller@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_8000000_FULL_NAME "interrupt-controller@8000000"
#define DT_N_S_soc_S_interrupt_controller_8000000_FULL_NAME_UNQUOTED interrupt-controller@8000000
#define DT_N_S_soc_S_interrupt_controller_8000000_FULL_NAME_TOKEN interrupt_controller_8000000
#define DT_N_S_soc_S_interrupt_controller_8000000_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_8000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_8000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_8000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_8000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_NODELABEL(fn) fn(gic)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_8000000_CHILD_NUM 1
#define DT_N_S_soc_S_interrupt_controller_8000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_8000000_HASH RhWgQL3L89jUPK_lgngrGF_574xgLOFxdU8LMKChxNY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_8000000_ORD 5
#define DT_N_S_soc_S_interrupt_controller_8000000_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_8000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_8000000_SUPPORTS_ORDS \
	6, /* /timer */ \
	13, /* /soc/uart@9000000 */ \
	14, /* /soc/virtio_mmio@a000000 */ \
	15, /* /soc/virtio_mmio@a000200 */ \
	16, /* /soc/virtio_mmio@a000400 */ \
	17, /* /soc/virtio_mmio@a000600 */ \
	18, /* /soc/virtio_mmio@a000800 */ \
	19, /* /soc/virtio_mmio@a000a00 */ \
	20, /* /soc/virtio_mmio@a000c00 */ \
	21, /* /soc/virtio_mmio@a000e00 */ \
	22, /* /soc/virtio_mmio@a001000 */ \
	23, /* /soc/virtio_mmio@a001200 */ \
	24, /* /soc/virtio_mmio@a001400 */ \
	25, /* /soc/virtio_mmio@a001600 */ \
	26, /* /soc/virtio_mmio@a001800 */ \
	27, /* /soc/virtio_mmio@a001a00 */ \
	28, /* /soc/virtio_mmio@a001c00 */ \
	29, /* /soc/virtio_mmio@a001e00 */ \
	30, /* /soc/virtio_mmio@a002000 */ \
	31, /* /soc/virtio_mmio@a002200 */ \
	32, /* /soc/virtio_mmio@a002400 */ \
	33, /* /soc/virtio_mmio@a002600 */ \
	34, /* /soc/virtio_mmio@a002800 */ \
	35, /* /soc/virtio_mmio@a002a00 */ \
	36, /* /soc/virtio_mmio@a002c00 */ \
	37, /* /soc/virtio_mmio@a002e00 */ \
	38, /* /soc/virtio_mmio@a003000 */ \
	39, /* /soc/virtio_mmio@a003200 */ \
	40, /* /soc/virtio_mmio@a003400 */ \
	41, /* /soc/virtio_mmio@a003600 */ \
	42, /* /soc/virtio_mmio@a003800 */ \
	43, /* /soc/virtio_mmio@a003a00 */ \
	44, /* /soc/virtio_mmio@a003c00 */ \
	45, /* /soc/virtio_mmio@a003e00 */ \
	46, /* /soc/interrupt-controller@8000000/its@8080000 */ \
	48, /* /soc/pcie@4010000000/pcie@1,0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_8000000_EXISTS 1
#define DT_N_INST_0_arm_gic_v3 DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_INST_0_arm_gic    DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_NODELABEL_gic     DT_N_S_soc_S_interrupt_controller_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_NUM 2
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_1_VAL_ADDRESS 134873088 /* 0x80a0000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_REG_IDX_1_VAL_SIZE 16121856 /* 0xf60000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MATCHES_arm_gic_v3 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MODEL_IDX_0 "gic-v3"
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MATCHES_arm_gic 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_COMPAT_MODEL_IDX_1 "gic"
#define DT_N_S_soc_S_interrupt_controller_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg {0 /* 0x0 */, 134217728 /* 0x8000000 */, 0 /* 0x0 */, 65536 /* 0x10000 */, 0 /* 0x0 */, 134873088 /* 0x80a0000 */, 0 /* 0x0 */, 16121856 /* 0xf60000 */}
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_1 134217728
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_2 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_3 65536
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_4 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_5 134873088
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_6 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_IDX_7 16121856
#define DT_N_S_soc_S_interrupt_controller_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status "okay"
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000, status, 0)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000, status, 0)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_LEN 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_status_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible {"arm,gic-v3", "arm,gic"}
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_0 "arm,gic-v3"
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_0_STRING_UNQUOTED arm,gic-v3
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_0_STRING_TOKEN arm_gic_v3
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_GIC_V3
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_1 "arm,gic"
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_1_STRING_UNQUOTED arm,gic
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_1_STRING_TOKEN arm_gic
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_GIC
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_interrupt_controller_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /timer
 *
 * Node identifier: DT_N_S_timer
 *
 * Binding (compatible = arm,armv8-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv8-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_timer_PATH "/timer"

/* Node's name with unit-address: */
#define DT_N_S_timer_FULL_NAME "timer"
#define DT_N_S_timer_FULL_NAME_UNQUOTED timer
#define DT_N_S_timer_FULL_NAME_TOKEN timer
#define DT_N_S_timer_FULL_NAME_UPPER_TOKEN TIMER

/* Node parent (/) identifier: */
#define DT_N_S_timer_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_timer_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_timer_NODELABEL_NUM 0
#define DT_N_S_timer_FOREACH_NODELABEL(fn) 
#define DT_N_S_timer_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_timer_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_timer_CHILD_NUM 0
#define DT_N_S_timer_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_timer_FOREACH_CHILD(fn) 
#define DT_N_S_timer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_timer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_timer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_timer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_timer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_timer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_timer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_timer_HASH KNnVNZN2GhkR0nNuh3Czq6S8058skWF6qvJ6vcpoSF4

/* Node's dependency ordinal: */
#define DT_N_S_timer_ORD 6
#define DT_N_S_timer_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_timer_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_timer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_timer_EXISTS 1
#define DT_N_INST_0_arm_armv8_timer DT_N_S_timer

/* Macros for properties that are special in the specification: */
#define DT_N_S_timer_REG_NUM 0
#define DT_N_S_timer_RANGES_NUM 0
#define DT_N_S_timer_FOREACH_RANGE(fn) 
#define DT_N_S_timer_IRQ_NUM 4
#define DT_N_S_timer_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_VAL_type 1
#define DT_N_S_timer_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_timer_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_timer_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_timer_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_IRQ_IDX_1_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_VAL_type 1
#define DT_N_S_timer_IRQ_IDX_1_VAL_type_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_VAL_irq 30
#define DT_N_S_timer_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_VAL_flags 2
#define DT_N_S_timer_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_VAL_priority 160
#define DT_N_S_timer_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_IRQ_IDX_2_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_VAL_type 1
#define DT_N_S_timer_IRQ_IDX_2_VAL_type_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_VAL_irq 27
#define DT_N_S_timer_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_VAL_flags 2
#define DT_N_S_timer_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_VAL_priority 160
#define DT_N_S_timer_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_IRQ_IDX_3_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_VAL_type 1
#define DT_N_S_timer_IRQ_IDX_3_VAL_type_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_VAL_irq 26
#define DT_N_S_timer_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_VAL_flags 2
#define DT_N_S_timer_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_VAL_priority 160
#define DT_N_S_timer_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_timer_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_IRQ_LEVEL 1
#define DT_N_S_timer_COMPAT_MATCHES_arm_armv8_timer 1
#define DT_N_S_timer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_timer_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_timer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_timer_COMPAT_MODEL_IDX_0 "armv8-timer"
#define DT_N_S_timer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_timer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_timer_P_interrupts {1 /* 0x1 */, 13 /* 0xd */, 2 /* 0x2 */, 160 /* 0xa0 */, 1 /* 0x1 */, 14 /* 0xe */, 2 /* 0x2 */, 160 /* 0xa0 */, 1 /* 0x1 */, 11 /* 0xb */, 2 /* 0x2 */, 160 /* 0xa0 */, 1 /* 0x1 */, 10 /* 0xa */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_timer_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_0 1
#define DT_N_S_timer_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_1 13
#define DT_N_S_timer_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_2 2
#define DT_N_S_timer_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_3 160
#define DT_N_S_timer_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_4 1
#define DT_N_S_timer_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_5 14
#define DT_N_S_timer_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_6 2
#define DT_N_S_timer_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_7 160
#define DT_N_S_timer_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_8 1
#define DT_N_S_timer_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_9 11
#define DT_N_S_timer_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_10 2
#define DT_N_S_timer_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_11 160
#define DT_N_S_timer_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_12 1
#define DT_N_S_timer_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_13 10
#define DT_N_S_timer_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_14 2
#define DT_N_S_timer_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_timer_P_interrupts_IDX_15 160
#define DT_N_S_timer_P_interrupts_EXISTS 1
#define DT_N_S_timer_P_compatible {"arm,armv8-timer"}
#define DT_N_S_timer_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_timer_P_compatible_IDX_0 "arm,armv8-timer"
#define DT_N_S_timer_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8-timer
#define DT_N_S_timer_P_compatible_IDX_0_STRING_TOKEN arm_armv8_timer
#define DT_N_S_timer_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8_TIMER
#define DT_N_S_timer_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_timer, compatible, 0)
#define DT_N_S_timer_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_timer, compatible, 0)
#define DT_N_S_timer_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_timer, compatible, 0, __VA_ARGS__)
#define DT_N_S_timer_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_timer, compatible, 0, __VA_ARGS__)
#define DT_N_S_timer_P_compatible_LEN 1
#define DT_N_S_timer_P_compatible_EXISTS 1
#define DT_N_S_timer_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_timer_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_timer_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_timer, interrupt_parent, 0)
#define DT_N_S_timer_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_timer, interrupt_parent, 0)
#define DT_N_S_timer_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_timer, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_timer_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_timer, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_timer_P_interrupt_parent_LEN 1
#define DT_N_S_timer_P_interrupt_parent_EXISTS 1
#define DT_N_S_timer_P_zephyr_deferred_init 0
#define DT_N_S_timer_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_timer_P_wakeup_source 0
#define DT_N_S_timer_P_wakeup_source_EXISTS 1
#define DT_N_S_timer_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_timer_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 7
#define DT_N_S_cpus_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	8, /* /cpus/cpu@0 */ \
	9, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-a53):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-a53.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 8
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	7, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_a53 DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_a53 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-a53"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-a53"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-a53"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-a53
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_a53
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_A53
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = arm,cortex-a53):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-a53.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_HASH 9JjWVNk3G1ibyc8ZwlqKxfoxH3N71yBfTFpYJTDe_oU

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 9
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	7, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_arm_cortex_a53 DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_arm_cortex_a53 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "cortex-a53"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_compatible {"arm,cortex-a53"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "arm,cortex-a53"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-a53
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN arm_cortex_a53
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_A53
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_0
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_0_PATH "/soc/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_0_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_0_HASH 3wiEnHs9jJr1KV7NqNJUc_het4m55pVI_4P3t1ZxuGg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_0_ORD 10
#define DT_N_S_soc_S_flash_0_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_0_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_0_EXISTS 1
#define DT_N_INST_0_cfi_flash DT_N_S_soc_S_flash_0
#define DT_N_NODELABEL_flash0 DT_N_S_soc_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_0_REG_IDX_0_VAL_SIZE 67108864 /* 0x4000000 */
#define DT_N_S_soc_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_0_COMPAT_MATCHES_cfi_flash 1
#define DT_N_S_soc_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_0_P_compatible {"cfi-flash"}
#define DT_N_S_soc_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_compatible_IDX_0 "cfi-flash"
#define DT_N_S_soc_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED cfi-flash
#define DT_N_S_soc_S_flash_0_P_compatible_IDX_0_STRING_TOKEN cfi_flash
#define DT_N_S_soc_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN CFI_FLASH
#define DT_N_S_soc_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_reg {0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 67108864 /* 0x4000000 */}
#define DT_N_S_soc_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_reg_IDX_1 0
#define DT_N_S_soc_S_flash_0_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_reg_IDX_2 0
#define DT_N_S_soc_S_flash_0_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_flash_0_P_reg_IDX_3 67108864
#define DT_N_S_soc_S_flash_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/memory@40000000
 *
 * Node identifier: DT_N_S_soc_S_memory_40000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40000000_PATH "/soc/memory@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40000000_FULL_NAME "memory@40000000"
#define DT_N_S_soc_S_memory_40000000_FULL_NAME_UNQUOTED memory@40000000
#define DT_N_S_soc_S_memory_40000000_FULL_NAME_TOKEN memory_40000000
#define DT_N_S_soc_S_memory_40000000_FULL_NAME_UPPER_TOKEN MEMORY_40000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_40000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_40000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_40000000_HASH nbAizBBaey4AZLksP2E4tlC3td_q0E8WaOndm_EQ_0o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40000000_ORD 11
#define DT_N_S_soc_S_memory_40000000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_40000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40000000_REG_NUM 1
#define DT_N_S_soc_S_memory_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_memory_40000000_REG_IDX_0_VAL_SIZE 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_memory_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_40000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40000000_P_reg {0 /* 0x0 */, 1073741824 /* 0x40000000 */, 0 /* 0x0 */, 134217728 /* 0x8000000 */}
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_0 0
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_1 1073741824
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_2 0
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_reg_IDX_3 134217728
#define DT_N_S_soc_S_memory_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_40000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_40000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40000000, compatible, 0)
#define DT_N_S_soc_S_memory_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40000000, compatible, 0)
#define DT_N_S_soc_S_memory_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /apb-pclk
 *
 * Node identifier: DT_N_S_apb_pclk
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_apb_pclk_PATH "/apb-pclk"

/* Node's name with unit-address: */
#define DT_N_S_apb_pclk_FULL_NAME "apb-pclk"
#define DT_N_S_apb_pclk_FULL_NAME_UNQUOTED apb-pclk
#define DT_N_S_apb_pclk_FULL_NAME_TOKEN apb_pclk
#define DT_N_S_apb_pclk_FULL_NAME_UPPER_TOKEN APB_PCLK

/* Node parent (/) identifier: */
#define DT_N_S_apb_pclk_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_apb_pclk_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_apb_pclk_NODELABEL_NUM 1
#define DT_N_S_apb_pclk_FOREACH_NODELABEL(fn) fn(uartclk)
#define DT_N_S_apb_pclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(uartclk, __VA_ARGS__)
#define DT_N_S_apb_pclk_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_apb_pclk_CHILD_NUM 0
#define DT_N_S_apb_pclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_apb_pclk_FOREACH_CHILD(fn) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_apb_pclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_apb_pclk_HASH dkGTyewTyA7bHcwJQZhDQ6I07mP4vELOu5Ifsb_bqNs

/* Node's dependency ordinal: */
#define DT_N_S_apb_pclk_ORD 12
#define DT_N_S_apb_pclk_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_apb_pclk_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_apb_pclk_SUPPORTS_ORDS \
	13, /* /soc/uart@9000000 */

/* Existence and alternate IDs: */
#define DT_N_S_apb_pclk_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_apb_pclk
#define DT_N_NODELABEL_uartclk  DT_N_S_apb_pclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_apb_pclk_REG_NUM 0
#define DT_N_S_apb_pclk_RANGES_NUM 0
#define DT_N_S_apb_pclk_FOREACH_RANGE(fn) 
#define DT_N_S_apb_pclk_IRQ_NUM 0
#define DT_N_S_apb_pclk_IRQ_LEVEL 0
#define DT_N_S_apb_pclk_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_apb_pclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_apb_pclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_apb_pclk_P_clock_frequency 24000000
#define DT_N_S_apb_pclk_P_clock_frequency_EXISTS 1
#define DT_N_S_apb_pclk_P_compatible {"fixed-clock"}
#define DT_N_S_apb_pclk_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_apb_pclk_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_apb_pclk_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_apb_pclk_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_apb_pclk_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_apb_pclk_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_apb_pclk, compatible, 0)
#define DT_N_S_apb_pclk_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_apb_pclk, compatible, 0)
#define DT_N_S_apb_pclk_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_apb_pclk, compatible, 0, __VA_ARGS__)
#define DT_N_S_apb_pclk_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_apb_pclk, compatible, 0, __VA_ARGS__)
#define DT_N_S_apb_pclk_P_compatible_LEN 1
#define DT_N_S_apb_pclk_P_compatible_EXISTS 1
#define DT_N_S_apb_pclk_P_zephyr_deferred_init 0
#define DT_N_S_apb_pclk_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_apb_pclk_P_wakeup_source 0
#define DT_N_S_apb_pclk_P_wakeup_source_EXISTS 1
#define DT_N_S_apb_pclk_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_apb_pclk_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@9000000
 *
 * Node identifier: DT_N_S_soc_S_uart_9000000
 *
 * Binding (compatible = arm,pl011):
 *   $ZEPHYR_BASE/dts/bindings/serial/arm,pl011.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_9000000_PATH "/soc/uart@9000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_9000000_FULL_NAME "uart@9000000"
#define DT_N_S_soc_S_uart_9000000_FULL_NAME_UNQUOTED uart@9000000
#define DT_N_S_soc_S_uart_9000000_FULL_NAME_TOKEN uart_9000000
#define DT_N_S_soc_S_uart_9000000_FULL_NAME_UPPER_TOKEN UART_9000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_9000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_9000000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_9000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_9000000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_9000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_9000000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_9000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_9000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_9000000_HASH AtoWz0J8wIrAHHyLfz5g_CL4a5miZLlN7oju7dVNhys

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_9000000_ORD 13
#define DT_N_S_soc_S_uart_9000000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_9000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */ \
	12, /* /apb-pclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_9000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_9000000_EXISTS 1
#define DT_N_INST_0_arm_pl011 DT_N_S_soc_S_uart_9000000
#define DT_N_NODELABEL_uart0  DT_N_S_soc_S_uart_9000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_9000000_REG_NUM 1
#define DT_N_S_soc_S_uart_9000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_REG_IDX_0_VAL_ADDRESS 150994944 /* 0x9000000 */
#define DT_N_S_soc_S_uart_9000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_9000000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_9000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_9000000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_uart_9000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_type DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_type
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_irq DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_flags DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_priority DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_IRQ_NAME_irq_0_CONTROLLER DT_N_S_soc_S_uart_9000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_uart_9000000_COMPAT_MATCHES_arm_pl011 1
#define DT_N_S_soc_S_uart_9000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_uart_9000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_COMPAT_MODEL_IDX_0 "pl011"
#define DT_N_S_soc_S_uart_9000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_9000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_9000000_P_reg {0 /* 0x0 */, 150994944 /* 0x9000000 */, 0 /* 0x0 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_0 0
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_1 150994944
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_2 0
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_reg_IDX_3 4096
#define DT_N_S_soc_S_uart_9000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_uart_9000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_fifo_disable 0
#define DT_N_S_soc_S_uart_9000000_P_fifo_disable_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_current_speed 115200
#define DT_N_S_soc_S_uart_9000000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_9000000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_parity "none"
#define DT_N_S_soc_S_uart_9000000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_9000000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_9000000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_9000000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_9000000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_9000000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_9000000, parity, 0)
#define DT_N_S_soc_S_uart_9000000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_9000000, parity, 0)
#define DT_N_S_soc_S_uart_9000000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_9000000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_9000000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_9000000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_status "okay"
#define DT_N_S_soc_S_uart_9000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_9000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_9000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_9000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_9000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_9000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_9000000, status, 0)
#define DT_N_S_soc_S_uart_9000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_9000000, status, 0)
#define DT_N_S_soc_S_uart_9000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_9000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_9000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_status_LEN 1
#define DT_N_S_soc_S_uart_9000000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_compatible {"arm,pl011"}
#define DT_N_S_soc_S_uart_9000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_compatible_IDX_0 "arm,pl011"
#define DT_N_S_soc_S_uart_9000000_P_compatible_IDX_0_STRING_UNQUOTED arm,pl011
#define DT_N_S_soc_S_uart_9000000_P_compatible_IDX_0_STRING_TOKEN arm_pl011
#define DT_N_S_soc_S_uart_9000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_PL011
#define DT_N_S_soc_S_uart_9000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_9000000, compatible, 0)
#define DT_N_S_soc_S_uart_9000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_9000000, compatible, 0)
#define DT_N_S_soc_S_uart_9000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_9000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_9000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_9000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names {"irq_0"}
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_IDX_0 "irq_0"
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_IDX_0_STRING_UNQUOTED irq_0
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_IDX_0_STRING_TOKEN irq_0
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN IRQ_0
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_9000000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_9000000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_9000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_9000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_9000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_clocks_IDX_0_PH DT_N_S_apb_pclk
#define DT_N_S_soc_S_uart_9000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_9000000, clocks, 0)
#define DT_N_S_soc_S_uart_9000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_9000000, clocks, 0)
#define DT_N_S_soc_S_uart_9000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_9000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_9000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_9000000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_9000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_9000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_9000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_9000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_9000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000000
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000000
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000000_PATH "/soc/virtio_mmio@a000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000000_FULL_NAME "virtio_mmio@a000000"
#define DT_N_S_soc_S_virtio_mmio_a000000_FULL_NAME_UNQUOTED virtio_mmio@a000000
#define DT_N_S_soc_S_virtio_mmio_a000000_FULL_NAME_TOKEN virtio_mmio_a000000
#define DT_N_S_soc_S_virtio_mmio_a000000_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_NODELABEL(fn) fn(virtio_mmio0)
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000000_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000000_HASH VggJQ0ZXC5SH7bMtMn4spNnTpYXgQe4FNIqViBjl2Ws

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000000_ORD 14
#define DT_N_S_soc_S_virtio_mmio_a000000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000000_EXISTS 1
#define DT_N_INST_0_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000000
#define DT_N_NODELABEL_virtio_mmio0 DT_N_S_soc_S_virtio_mmio_a000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000000_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_REG_IDX_0_VAL_ADDRESS 167772160 /* 0xa000000 */
#define DT_N_S_soc_S_virtio_mmio_a000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000000_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000000_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg {0 /* 0x0 */, 167772160 /* 0xa000000 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_1 167772160
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts {0 /* 0x0 */, 16 /* 0x10 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_1 16
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000200
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000200
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000200_PATH "/soc/virtio_mmio@a000200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000200_FULL_NAME "virtio_mmio@a000200"
#define DT_N_S_soc_S_virtio_mmio_a000200_FULL_NAME_UNQUOTED virtio_mmio@a000200
#define DT_N_S_soc_S_virtio_mmio_a000200_FULL_NAME_TOKEN virtio_mmio_a000200
#define DT_N_S_soc_S_virtio_mmio_a000200_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000200

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000200_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000200_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_NODELABEL(fn) fn(virtio_mmio1)
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio1, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000200_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000200_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000200_HASH u5cYvQLvgLScVnLeW0d_DKtDSDEVNgpery2LSP6oAQM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000200_ORD 15
#define DT_N_S_soc_S_virtio_mmio_a000200_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000200_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000200_EXISTS 1
#define DT_N_INST_1_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000200
#define DT_N_NODELABEL_virtio_mmio1 DT_N_S_soc_S_virtio_mmio_a000200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000200_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_REG_IDX_0_VAL_ADDRESS 167772672 /* 0xa000200 */
#define DT_N_S_soc_S_virtio_mmio_a000200_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000200_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000200_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000200_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg {0 /* 0x0 */, 167772672 /* 0xa000200 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_1 167772672
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000200_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts {0 /* 0x0 */, 17 /* 0x11 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_1 17
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000400
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000400
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000400_PATH "/soc/virtio_mmio@a000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000400_FULL_NAME "virtio_mmio@a000400"
#define DT_N_S_soc_S_virtio_mmio_a000400_FULL_NAME_UNQUOTED virtio_mmio@a000400
#define DT_N_S_soc_S_virtio_mmio_a000400_FULL_NAME_TOKEN virtio_mmio_a000400
#define DT_N_S_soc_S_virtio_mmio_a000400_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000400_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_NODELABEL(fn) fn(virtio_mmio2)
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio2, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000400_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000400_HASH EexTa1_EXde464G9S__qpbIb4EZ_2B2TAEHXF0JdBWI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000400_ORD 16
#define DT_N_S_soc_S_virtio_mmio_a000400_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000400_EXISTS 1
#define DT_N_INST_2_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000400
#define DT_N_NODELABEL_virtio_mmio2 DT_N_S_soc_S_virtio_mmio_a000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000400_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_REG_IDX_0_VAL_ADDRESS 167773184 /* 0xa000400 */
#define DT_N_S_soc_S_virtio_mmio_a000400_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000400_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000400_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg {0 /* 0x0 */, 167773184 /* 0xa000400 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_1 167773184
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts {0 /* 0x0 */, 18 /* 0x12 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_1 18
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000600
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000600
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000600_PATH "/soc/virtio_mmio@a000600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000600_FULL_NAME "virtio_mmio@a000600"
#define DT_N_S_soc_S_virtio_mmio_a000600_FULL_NAME_UNQUOTED virtio_mmio@a000600
#define DT_N_S_soc_S_virtio_mmio_a000600_FULL_NAME_TOKEN virtio_mmio_a000600
#define DT_N_S_soc_S_virtio_mmio_a000600_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000600

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000600_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000600_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000600_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_NODELABEL(fn) fn(virtio_mmio3)
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio3, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000600_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000600_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000600_HASH dslnlEdcAsx_moXgtXPcXK0DmdhSU78iDUX0AVcZBf8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000600_ORD 17
#define DT_N_S_soc_S_virtio_mmio_a000600_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000600_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000600_EXISTS 1
#define DT_N_INST_3_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000600
#define DT_N_NODELABEL_virtio_mmio3 DT_N_S_soc_S_virtio_mmio_a000600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000600_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_REG_IDX_0_VAL_ADDRESS 167773696 /* 0xa000600 */
#define DT_N_S_soc_S_virtio_mmio_a000600_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000600_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000600_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000600_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000600_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg {0 /* 0x0 */, 167773696 /* 0xa000600 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_1 167773696
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000600_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts {0 /* 0x0 */, 19 /* 0x13 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_1 19
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000800
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000800
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000800_PATH "/soc/virtio_mmio@a000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000800_FULL_NAME "virtio_mmio@a000800"
#define DT_N_S_soc_S_virtio_mmio_a000800_FULL_NAME_UNQUOTED virtio_mmio@a000800
#define DT_N_S_soc_S_virtio_mmio_a000800_FULL_NAME_TOKEN virtio_mmio_a000800
#define DT_N_S_soc_S_virtio_mmio_a000800_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000800_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_NODELABEL(fn) fn(virtio_mmio4)
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio4, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000800_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000800_HASH vpZFHQZO8ysNao1841d7WWr5xSTnIHE4Yu7ycCLQMVo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000800_ORD 18
#define DT_N_S_soc_S_virtio_mmio_a000800_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000800_EXISTS 1
#define DT_N_INST_4_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000800
#define DT_N_NODELABEL_virtio_mmio4 DT_N_S_soc_S_virtio_mmio_a000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000800_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_REG_IDX_0_VAL_ADDRESS 167774208 /* 0xa000800 */
#define DT_N_S_soc_S_virtio_mmio_a000800_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000800_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000800_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg {0 /* 0x0 */, 167774208 /* 0xa000800 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_1 167774208
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts {0 /* 0x0 */, 20 /* 0x14 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_1 20
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000a00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000a00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_PATH "/soc/virtio_mmio@a000a00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_FULL_NAME "virtio_mmio@a000a00"
#define DT_N_S_soc_S_virtio_mmio_a000a00_FULL_NAME_UNQUOTED virtio_mmio@a000a00
#define DT_N_S_soc_S_virtio_mmio_a000a00_FULL_NAME_TOKEN virtio_mmio_a000a00
#define DT_N_S_soc_S_virtio_mmio_a000a00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000A00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_NODELABEL(fn) fn(virtio_mmio5)
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio5, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000a00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_HASH yVp3XZ_vkYUUvwl_AF1rp6jf9O3zPsYAoBsGxQDLU1s

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_ORD 19
#define DT_N_S_soc_S_virtio_mmio_a000a00_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_EXISTS 1
#define DT_N_INST_5_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000a00
#define DT_N_NODELABEL_virtio_mmio5 DT_N_S_soc_S_virtio_mmio_a000a00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_REG_IDX_0_VAL_ADDRESS 167774720 /* 0xa000a00 */
#define DT_N_S_soc_S_virtio_mmio_a000a00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000a00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000a00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000a00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000a00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg {0 /* 0x0 */, 167774720 /* 0xa000a00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_1 167774720
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts {0 /* 0x0 */, 21 /* 0x15 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_1 21
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000a00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000c00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000c00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_PATH "/soc/virtio_mmio@a000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_FULL_NAME "virtio_mmio@a000c00"
#define DT_N_S_soc_S_virtio_mmio_a000c00_FULL_NAME_UNQUOTED virtio_mmio@a000c00
#define DT_N_S_soc_S_virtio_mmio_a000c00_FULL_NAME_TOKEN virtio_mmio_a000c00
#define DT_N_S_soc_S_virtio_mmio_a000c00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_NODELABEL(fn) fn(virtio_mmio6)
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio6, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000c00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_HASH p5fttfqOnZfMdvTuPXv4bWIVH21_fpJ3Qnoe__0xRNA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_ORD 20
#define DT_N_S_soc_S_virtio_mmio_a000c00_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_EXISTS 1
#define DT_N_INST_6_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000c00
#define DT_N_NODELABEL_virtio_mmio6 DT_N_S_soc_S_virtio_mmio_a000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_REG_IDX_0_VAL_ADDRESS 167775232 /* 0xa000c00 */
#define DT_N_S_soc_S_virtio_mmio_a000c00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000c00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg {0 /* 0x0 */, 167775232 /* 0xa000c00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_1 167775232
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts {0 /* 0x0 */, 22 /* 0x16 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_1 22
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a000e00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a000e00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_PATH "/soc/virtio_mmio@a000e00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_FULL_NAME "virtio_mmio@a000e00"
#define DT_N_S_soc_S_virtio_mmio_a000e00_FULL_NAME_UNQUOTED virtio_mmio@a000e00
#define DT_N_S_soc_S_virtio_mmio_a000e00_FULL_NAME_TOKEN virtio_mmio_a000e00
#define DT_N_S_soc_S_virtio_mmio_a000e00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A000E00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_NODELABEL(fn) fn(virtio_mmio7)
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio7, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a000e00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_HASH 8_bRNX_f1btTpQc9t3gmn0EEc2vcim3YZuq9ov9s1VM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_ORD 21
#define DT_N_S_soc_S_virtio_mmio_a000e00_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_EXISTS 1
#define DT_N_INST_7_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a000e00
#define DT_N_NODELABEL_virtio_mmio7 DT_N_S_soc_S_virtio_mmio_a000e00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_REG_IDX_0_VAL_ADDRESS 167775744 /* 0xa000e00 */
#define DT_N_S_soc_S_virtio_mmio_a000e00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a000e00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a000e00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a000e00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a000e00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a000e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a000e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a000e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a000e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg {0 /* 0x0 */, 167775744 /* 0xa000e00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_1 167775744
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts {0 /* 0x0 */, 23 /* 0x17 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_1 23
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a000e00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001000
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001000
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001000_PATH "/soc/virtio_mmio@a001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001000_FULL_NAME "virtio_mmio@a001000"
#define DT_N_S_soc_S_virtio_mmio_a001000_FULL_NAME_UNQUOTED virtio_mmio@a001000
#define DT_N_S_soc_S_virtio_mmio_a001000_FULL_NAME_TOKEN virtio_mmio_a001000
#define DT_N_S_soc_S_virtio_mmio_a001000_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_NODELABEL(fn) fn(virtio_mmio8)
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio8, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001000_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001000_HASH LkqoE5y7HzDcwXGdgQp_EDK_N9WKCkflFbz3x2by38I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001000_ORD 22
#define DT_N_S_soc_S_virtio_mmio_a001000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001000_EXISTS 1
#define DT_N_INST_8_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001000
#define DT_N_NODELABEL_virtio_mmio8 DT_N_S_soc_S_virtio_mmio_a001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001000_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_REG_IDX_0_VAL_ADDRESS 167776256 /* 0xa001000 */
#define DT_N_S_soc_S_virtio_mmio_a001000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001000_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001000_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg {0 /* 0x0 */, 167776256 /* 0xa001000 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_1 167776256
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts {0 /* 0x0 */, 24 /* 0x18 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_1 24
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001200
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001200
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001200_PATH "/soc/virtio_mmio@a001200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001200_FULL_NAME "virtio_mmio@a001200"
#define DT_N_S_soc_S_virtio_mmio_a001200_FULL_NAME_UNQUOTED virtio_mmio@a001200
#define DT_N_S_soc_S_virtio_mmio_a001200_FULL_NAME_TOKEN virtio_mmio_a001200
#define DT_N_S_soc_S_virtio_mmio_a001200_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001200

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001200_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001200_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_NODELABEL(fn) fn(virtio_mmio9)
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio9, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001200_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001200_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001200_HASH ThG6xa6ZQS7TQAciX8i65mD3yFKPrD2TK_DOhjqcGMc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001200_ORD 23
#define DT_N_S_soc_S_virtio_mmio_a001200_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001200_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001200_EXISTS 1
#define DT_N_INST_9_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001200
#define DT_N_NODELABEL_virtio_mmio9 DT_N_S_soc_S_virtio_mmio_a001200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001200_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_REG_IDX_0_VAL_ADDRESS 167776768 /* 0xa001200 */
#define DT_N_S_soc_S_virtio_mmio_a001200_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001200_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001200_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001200_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg {0 /* 0x0 */, 167776768 /* 0xa001200 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_1 167776768
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001200_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts {0 /* 0x0 */, 25 /* 0x19 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_1 25
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001400
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001400
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001400_PATH "/soc/virtio_mmio@a001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001400_FULL_NAME "virtio_mmio@a001400"
#define DT_N_S_soc_S_virtio_mmio_a001400_FULL_NAME_UNQUOTED virtio_mmio@a001400
#define DT_N_S_soc_S_virtio_mmio_a001400_FULL_NAME_TOKEN virtio_mmio_a001400
#define DT_N_S_soc_S_virtio_mmio_a001400_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001400_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_NODELABEL(fn) fn(virtio_mmio10)
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio10, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001400_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001400_HASH G46QmEgqSDHerX4eogUXa5EmhISox2CVihuplquiu_s

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001400_ORD 24
#define DT_N_S_soc_S_virtio_mmio_a001400_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001400_EXISTS 1
#define DT_N_INST_10_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001400
#define DT_N_NODELABEL_virtio_mmio10 DT_N_S_soc_S_virtio_mmio_a001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001400_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_REG_IDX_0_VAL_ADDRESS 167777280 /* 0xa001400 */
#define DT_N_S_soc_S_virtio_mmio_a001400_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001400_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_irq 58
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001400_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg {0 /* 0x0 */, 167777280 /* 0xa001400 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_1 167777280
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts {0 /* 0x0 */, 26 /* 0x1a */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_1 26
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001600
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001600
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001600_PATH "/soc/virtio_mmio@a001600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001600_FULL_NAME "virtio_mmio@a001600"
#define DT_N_S_soc_S_virtio_mmio_a001600_FULL_NAME_UNQUOTED virtio_mmio@a001600
#define DT_N_S_soc_S_virtio_mmio_a001600_FULL_NAME_TOKEN virtio_mmio_a001600
#define DT_N_S_soc_S_virtio_mmio_a001600_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001600

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001600_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001600_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001600_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_NODELABEL(fn) fn(virtio_mmio11)
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio11, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001600_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001600_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001600_HASH DJzSHN8jqUzkUbVC7jgh9h4XUVFHekhL5RQHVGHRNVE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001600_ORD 25
#define DT_N_S_soc_S_virtio_mmio_a001600_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001600_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001600_EXISTS 1
#define DT_N_INST_11_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001600
#define DT_N_NODELABEL_virtio_mmio11 DT_N_S_soc_S_virtio_mmio_a001600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001600_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_REG_IDX_0_VAL_ADDRESS 167777792 /* 0xa001600 */
#define DT_N_S_soc_S_virtio_mmio_a001600_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001600_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_irq 59
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001600_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001600_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001600_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg {0 /* 0x0 */, 167777792 /* 0xa001600 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_1 167777792
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001600_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts {0 /* 0x0 */, 27 /* 0x1b */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_1 27
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001800
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001800
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001800_PATH "/soc/virtio_mmio@a001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001800_FULL_NAME "virtio_mmio@a001800"
#define DT_N_S_soc_S_virtio_mmio_a001800_FULL_NAME_UNQUOTED virtio_mmio@a001800
#define DT_N_S_soc_S_virtio_mmio_a001800_FULL_NAME_TOKEN virtio_mmio_a001800
#define DT_N_S_soc_S_virtio_mmio_a001800_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001800_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001800_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_NODELABEL(fn) fn(virtio_mmio12)
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio12, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001800_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001800_HASH 3KS_xpujoKKEoCxhhckKsOL9CCzMYuLChTMtbzbYSsM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001800_ORD 26
#define DT_N_S_soc_S_virtio_mmio_a001800_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001800_EXISTS 1
#define DT_N_INST_12_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001800
#define DT_N_NODELABEL_virtio_mmio12 DT_N_S_soc_S_virtio_mmio_a001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001800_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_REG_IDX_0_VAL_ADDRESS 167778304 /* 0xa001800 */
#define DT_N_S_soc_S_virtio_mmio_a001800_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001800_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_irq 60
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001800_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001800_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg {0 /* 0x0 */, 167778304 /* 0xa001800 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_1 167778304
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts {0 /* 0x0 */, 28 /* 0x1c */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_1 28
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001a00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001a00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_PATH "/soc/virtio_mmio@a001a00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_FULL_NAME "virtio_mmio@a001a00"
#define DT_N_S_soc_S_virtio_mmio_a001a00_FULL_NAME_UNQUOTED virtio_mmio@a001a00
#define DT_N_S_soc_S_virtio_mmio_a001a00_FULL_NAME_TOKEN virtio_mmio_a001a00
#define DT_N_S_soc_S_virtio_mmio_a001a00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001A00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_NODELABEL(fn) fn(virtio_mmio13)
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio13, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001a00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_HASH J8DN3PPs_rHkRes2HzJdL9GK0_q7WnbKi3_VX_l_vv4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_ORD 27
#define DT_N_S_soc_S_virtio_mmio_a001a00_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_EXISTS 1
#define DT_N_INST_13_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001a00
#define DT_N_NODELABEL_virtio_mmio13 DT_N_S_soc_S_virtio_mmio_a001a00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_REG_IDX_0_VAL_ADDRESS 167778816 /* 0xa001a00 */
#define DT_N_S_soc_S_virtio_mmio_a001a00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001a00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_irq 61
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001a00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001a00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001a00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg {0 /* 0x0 */, 167778816 /* 0xa001a00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_1 167778816
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts {0 /* 0x0 */, 29 /* 0x1d */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_1 29
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001a00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001c00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001c00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_PATH "/soc/virtio_mmio@a001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_FULL_NAME "virtio_mmio@a001c00"
#define DT_N_S_soc_S_virtio_mmio_a001c00_FULL_NAME_UNQUOTED virtio_mmio@a001c00
#define DT_N_S_soc_S_virtio_mmio_a001c00_FULL_NAME_TOKEN virtio_mmio_a001c00
#define DT_N_S_soc_S_virtio_mmio_a001c00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_NODELABEL(fn) fn(virtio_mmio14)
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio14, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001c00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_HASH o5vUwePojj5i7s5a886CvgZVHZMnHLxGZv8nKnr9_Tg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_ORD 28
#define DT_N_S_soc_S_virtio_mmio_a001c00_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_EXISTS 1
#define DT_N_INST_14_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001c00
#define DT_N_NODELABEL_virtio_mmio14 DT_N_S_soc_S_virtio_mmio_a001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_REG_IDX_0_VAL_ADDRESS 167779328 /* 0xa001c00 */
#define DT_N_S_soc_S_virtio_mmio_a001c00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001c00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg {0 /* 0x0 */, 167779328 /* 0xa001c00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_1 167779328
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts {0 /* 0x0 */, 30 /* 0x1e */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_1 30
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a001e00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a001e00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_PATH "/soc/virtio_mmio@a001e00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_FULL_NAME "virtio_mmio@a001e00"
#define DT_N_S_soc_S_virtio_mmio_a001e00_FULL_NAME_UNQUOTED virtio_mmio@a001e00
#define DT_N_S_soc_S_virtio_mmio_a001e00_FULL_NAME_TOKEN virtio_mmio_a001e00
#define DT_N_S_soc_S_virtio_mmio_a001e00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A001E00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_NODELABEL(fn) fn(virtio_mmio15)
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio15, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a001e00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_HASH ynZReYrHPMtoD2PCvAu_zaMtCfL3vOktjYBxUQvvDdo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_ORD 29
#define DT_N_S_soc_S_virtio_mmio_a001e00_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_EXISTS 1
#define DT_N_INST_15_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a001e00
#define DT_N_NODELABEL_virtio_mmio15 DT_N_S_soc_S_virtio_mmio_a001e00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_REG_IDX_0_VAL_ADDRESS 167779840 /* 0xa001e00 */
#define DT_N_S_soc_S_virtio_mmio_a001e00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a001e00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_irq 63
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a001e00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a001e00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a001e00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a001e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a001e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a001e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a001e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg {0 /* 0x0 */, 167779840 /* 0xa001e00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_1 167779840
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts {0 /* 0x0 */, 31 /* 0x1f */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_1 31
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a001e00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002000
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002000
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002000_PATH "/soc/virtio_mmio@a002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002000_FULL_NAME "virtio_mmio@a002000"
#define DT_N_S_soc_S_virtio_mmio_a002000_FULL_NAME_UNQUOTED virtio_mmio@a002000
#define DT_N_S_soc_S_virtio_mmio_a002000_FULL_NAME_TOKEN virtio_mmio_a002000
#define DT_N_S_soc_S_virtio_mmio_a002000_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_NODELABEL(fn) fn(virtio_mmio16)
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio16, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002000_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002000_HASH ySAuzY0kOGtbIJXCC4UBitzUHqHCdMij697sXaA7T1k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002000_ORD 30
#define DT_N_S_soc_S_virtio_mmio_a002000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002000_EXISTS 1
#define DT_N_INST_16_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002000
#define DT_N_NODELABEL_virtio_mmio16 DT_N_S_soc_S_virtio_mmio_a002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002000_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_REG_IDX_0_VAL_ADDRESS 167780352 /* 0xa002000 */
#define DT_N_S_soc_S_virtio_mmio_a002000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002000_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_irq 64
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002000_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg {0 /* 0x0 */, 167780352 /* 0xa002000 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_1 167780352
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts {0 /* 0x0 */, 32 /* 0x20 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_1 32
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002200
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002200
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002200_PATH "/soc/virtio_mmio@a002200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002200_FULL_NAME "virtio_mmio@a002200"
#define DT_N_S_soc_S_virtio_mmio_a002200_FULL_NAME_UNQUOTED virtio_mmio@a002200
#define DT_N_S_soc_S_virtio_mmio_a002200_FULL_NAME_TOKEN virtio_mmio_a002200
#define DT_N_S_soc_S_virtio_mmio_a002200_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002200

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002200_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002200_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_NODELABEL(fn) fn(virtio_mmio17)
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio17, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002200_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002200_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002200_HASH 39JkIhHHp83PwhJMnQkdKUzicn5Y771HZLxX3GJzbGk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002200_ORD 31
#define DT_N_S_soc_S_virtio_mmio_a002200_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002200_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002200_EXISTS 1
#define DT_N_INST_17_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002200
#define DT_N_NODELABEL_virtio_mmio17 DT_N_S_soc_S_virtio_mmio_a002200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002200_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_REG_IDX_0_VAL_ADDRESS 167780864 /* 0xa002200 */
#define DT_N_S_soc_S_virtio_mmio_a002200_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002200_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_irq 65
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002200_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002200_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg {0 /* 0x0 */, 167780864 /* 0xa002200 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_1 167780864
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002200_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts {0 /* 0x0 */, 33 /* 0x21 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_1 33
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002400
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002400
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002400_PATH "/soc/virtio_mmio@a002400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002400_FULL_NAME "virtio_mmio@a002400"
#define DT_N_S_soc_S_virtio_mmio_a002400_FULL_NAME_UNQUOTED virtio_mmio@a002400
#define DT_N_S_soc_S_virtio_mmio_a002400_FULL_NAME_TOKEN virtio_mmio_a002400
#define DT_N_S_soc_S_virtio_mmio_a002400_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002400_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002400_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_NODELABEL(fn) fn(virtio_mmio18)
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio18, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002400_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002400_HASH dDvctBAnBm1v9kPJBKcugNT_Z85ErvTzTMNQDICg2iE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002400_ORD 32
#define DT_N_S_soc_S_virtio_mmio_a002400_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002400_EXISTS 1
#define DT_N_INST_18_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002400
#define DT_N_NODELABEL_virtio_mmio18 DT_N_S_soc_S_virtio_mmio_a002400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002400_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_REG_IDX_0_VAL_ADDRESS 167781376 /* 0xa002400 */
#define DT_N_S_soc_S_virtio_mmio_a002400_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002400_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_irq 66
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002400_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002400_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg {0 /* 0x0 */, 167781376 /* 0xa002400 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_1 167781376
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002400_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts {0 /* 0x0 */, 34 /* 0x22 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_1 34
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002600
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002600
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002600_PATH "/soc/virtio_mmio@a002600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002600_FULL_NAME "virtio_mmio@a002600"
#define DT_N_S_soc_S_virtio_mmio_a002600_FULL_NAME_UNQUOTED virtio_mmio@a002600
#define DT_N_S_soc_S_virtio_mmio_a002600_FULL_NAME_TOKEN virtio_mmio_a002600
#define DT_N_S_soc_S_virtio_mmio_a002600_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002600

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002600_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002600_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002600_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_NODELABEL(fn) fn(virtio_mmio19)
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio19, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002600_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002600_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002600_HASH RXWoVXzrsWzdPcbnV7s3G4azHAim7MGSL_UP9R9o3AU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002600_ORD 33
#define DT_N_S_soc_S_virtio_mmio_a002600_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002600_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002600_EXISTS 1
#define DT_N_INST_19_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002600
#define DT_N_NODELABEL_virtio_mmio19 DT_N_S_soc_S_virtio_mmio_a002600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002600_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_REG_IDX_0_VAL_ADDRESS 167781888 /* 0xa002600 */
#define DT_N_S_soc_S_virtio_mmio_a002600_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002600_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002600_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002600_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002600_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg {0 /* 0x0 */, 167781888 /* 0xa002600 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_1 167781888
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002600_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts {0 /* 0x0 */, 35 /* 0x23 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_1 35
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002800
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002800
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002800_PATH "/soc/virtio_mmio@a002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002800_FULL_NAME "virtio_mmio@a002800"
#define DT_N_S_soc_S_virtio_mmio_a002800_FULL_NAME_UNQUOTED virtio_mmio@a002800
#define DT_N_S_soc_S_virtio_mmio_a002800_FULL_NAME_TOKEN virtio_mmio_a002800
#define DT_N_S_soc_S_virtio_mmio_a002800_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002800_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_NODELABEL(fn) fn(virtio_mmio20)
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio20, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002800_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002800_HASH _BB2q1XfpgnPEQfyvX4Sy0t_ny8DpPFLUG6ww9dg924

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002800_ORD 34
#define DT_N_S_soc_S_virtio_mmio_a002800_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002800_EXISTS 1
#define DT_N_INST_20_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002800
#define DT_N_NODELABEL_virtio_mmio20 DT_N_S_soc_S_virtio_mmio_a002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002800_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_REG_IDX_0_VAL_ADDRESS 167782400 /* 0xa002800 */
#define DT_N_S_soc_S_virtio_mmio_a002800_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002800_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_irq 68
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002800_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg {0 /* 0x0 */, 167782400 /* 0xa002800 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_1 167782400
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts {0 /* 0x0 */, 36 /* 0x24 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_1 36
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002a00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002a00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_PATH "/soc/virtio_mmio@a002a00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_FULL_NAME "virtio_mmio@a002a00"
#define DT_N_S_soc_S_virtio_mmio_a002a00_FULL_NAME_UNQUOTED virtio_mmio@a002a00
#define DT_N_S_soc_S_virtio_mmio_a002a00_FULL_NAME_TOKEN virtio_mmio_a002a00
#define DT_N_S_soc_S_virtio_mmio_a002a00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002A00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_NODELABEL(fn) fn(virtio_mmio21)
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio21, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002a00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_HASH _oosN0FR4MFVG1L3c_9r3sdLeyWixlyR7qUu7VDbx_4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_ORD 35
#define DT_N_S_soc_S_virtio_mmio_a002a00_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_EXISTS 1
#define DT_N_INST_21_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002a00
#define DT_N_NODELABEL_virtio_mmio21 DT_N_S_soc_S_virtio_mmio_a002a00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_REG_IDX_0_VAL_ADDRESS 167782912 /* 0xa002a00 */
#define DT_N_S_soc_S_virtio_mmio_a002a00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002a00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_irq 69
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002a00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002a00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002a00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg {0 /* 0x0 */, 167782912 /* 0xa002a00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_1 167782912
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts {0 /* 0x0 */, 37 /* 0x25 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_1 37
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002a00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002c00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002c00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_PATH "/soc/virtio_mmio@a002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_FULL_NAME "virtio_mmio@a002c00"
#define DT_N_S_soc_S_virtio_mmio_a002c00_FULL_NAME_UNQUOTED virtio_mmio@a002c00
#define DT_N_S_soc_S_virtio_mmio_a002c00_FULL_NAME_TOKEN virtio_mmio_a002c00
#define DT_N_S_soc_S_virtio_mmio_a002c00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_NODELABEL(fn) fn(virtio_mmio22)
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio22, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002c00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_HASH kP_mHH4EYmdMEyWjrRjMp5tomV0987JVNsF6nr_pJaM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_ORD 36
#define DT_N_S_soc_S_virtio_mmio_a002c00_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_EXISTS 1
#define DT_N_INST_22_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002c00
#define DT_N_NODELABEL_virtio_mmio22 DT_N_S_soc_S_virtio_mmio_a002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_REG_IDX_0_VAL_ADDRESS 167783424 /* 0xa002c00 */
#define DT_N_S_soc_S_virtio_mmio_a002c00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002c00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg {0 /* 0x0 */, 167783424 /* 0xa002c00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_1 167783424
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts {0 /* 0x0 */, 38 /* 0x26 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_1 38
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a002e00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a002e00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_PATH "/soc/virtio_mmio@a002e00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_FULL_NAME "virtio_mmio@a002e00"
#define DT_N_S_soc_S_virtio_mmio_a002e00_FULL_NAME_UNQUOTED virtio_mmio@a002e00
#define DT_N_S_soc_S_virtio_mmio_a002e00_FULL_NAME_TOKEN virtio_mmio_a002e00
#define DT_N_S_soc_S_virtio_mmio_a002e00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A002E00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_NODELABEL(fn) fn(virtio_mmio23)
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio23, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a002e00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_HASH UmRRPMs36KUGx9w60aYUEj9Q909vHg4NnV6D2zEl95w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_ORD 37
#define DT_N_S_soc_S_virtio_mmio_a002e00_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_EXISTS 1
#define DT_N_INST_23_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a002e00
#define DT_N_NODELABEL_virtio_mmio23 DT_N_S_soc_S_virtio_mmio_a002e00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_REG_IDX_0_VAL_ADDRESS 167783936 /* 0xa002e00 */
#define DT_N_S_soc_S_virtio_mmio_a002e00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a002e00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a002e00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a002e00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a002e00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a002e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a002e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a002e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a002e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg {0 /* 0x0 */, 167783936 /* 0xa002e00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_1 167783936
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts {0 /* 0x0 */, 39 /* 0x27 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_1 39
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a002e00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003000
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003000
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003000_PATH "/soc/virtio_mmio@a003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003000_FULL_NAME "virtio_mmio@a003000"
#define DT_N_S_soc_S_virtio_mmio_a003000_FULL_NAME_UNQUOTED virtio_mmio@a003000
#define DT_N_S_soc_S_virtio_mmio_a003000_FULL_NAME_TOKEN virtio_mmio_a003000
#define DT_N_S_soc_S_virtio_mmio_a003000_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003000_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_NODELABEL(fn) fn(virtio_mmio24)
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio24, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003000_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003000_HASH uvsDnAmfpBBVbDt__TslruB0dmrJufoOSWDGELUrNuo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003000_ORD 38
#define DT_N_S_soc_S_virtio_mmio_a003000_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003000_EXISTS 1
#define DT_N_INST_24_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003000
#define DT_N_NODELABEL_virtio_mmio24 DT_N_S_soc_S_virtio_mmio_a003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003000_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_REG_IDX_0_VAL_ADDRESS 167784448 /* 0xa003000 */
#define DT_N_S_soc_S_virtio_mmio_a003000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003000_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003000_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003000, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003000, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg {0 /* 0x0 */, 167784448 /* 0xa003000 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_1 167784448
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts {0 /* 0x0 */, 40 /* 0x28 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_1 40
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003200
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003200
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003200_PATH "/soc/virtio_mmio@a003200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003200_FULL_NAME "virtio_mmio@a003200"
#define DT_N_S_soc_S_virtio_mmio_a003200_FULL_NAME_UNQUOTED virtio_mmio@a003200
#define DT_N_S_soc_S_virtio_mmio_a003200_FULL_NAME_TOKEN virtio_mmio_a003200
#define DT_N_S_soc_S_virtio_mmio_a003200_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003200

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003200_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003200_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_NODELABEL(fn) fn(virtio_mmio25)
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio25, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003200_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003200_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003200_HASH ohSb_SUKjIy1RbRfCUXzd7uXQ_MCSCHJ0b31bXjz0aw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003200_ORD 39
#define DT_N_S_soc_S_virtio_mmio_a003200_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003200_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003200_EXISTS 1
#define DT_N_INST_25_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003200
#define DT_N_NODELABEL_virtio_mmio25 DT_N_S_soc_S_virtio_mmio_a003200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003200_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_REG_IDX_0_VAL_ADDRESS 167784960 /* 0xa003200 */
#define DT_N_S_soc_S_virtio_mmio_a003200_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003200_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_irq 73
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003200_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003200_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003200, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003200, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg {0 /* 0x0 */, 167784960 /* 0xa003200 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_1 167784960
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003200_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts {0 /* 0x0 */, 41 /* 0x29 */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_1 41
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003400
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003400
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003400_PATH "/soc/virtio_mmio@a003400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003400_FULL_NAME "virtio_mmio@a003400"
#define DT_N_S_soc_S_virtio_mmio_a003400_FULL_NAME_UNQUOTED virtio_mmio@a003400
#define DT_N_S_soc_S_virtio_mmio_a003400_FULL_NAME_TOKEN virtio_mmio_a003400
#define DT_N_S_soc_S_virtio_mmio_a003400_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003400_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003400_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_NODELABEL(fn) fn(virtio_mmio26)
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio26, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003400_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003400_HASH GxW39xY1lFpznCWaAriLHiLqBSwFRoq_BXY0feFHGiY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003400_ORD 40
#define DT_N_S_soc_S_virtio_mmio_a003400_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003400_EXISTS 1
#define DT_N_INST_26_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003400
#define DT_N_NODELABEL_virtio_mmio26 DT_N_S_soc_S_virtio_mmio_a003400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003400_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_REG_IDX_0_VAL_ADDRESS 167785472 /* 0xa003400 */
#define DT_N_S_soc_S_virtio_mmio_a003400_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003400_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_irq 74
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003400_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003400_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003400, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003400, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg {0 /* 0x0 */, 167785472 /* 0xa003400 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_1 167785472
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003400_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts {0 /* 0x0 */, 42 /* 0x2a */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_1 42
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003600
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003600
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003600_PATH "/soc/virtio_mmio@a003600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003600_FULL_NAME "virtio_mmio@a003600"
#define DT_N_S_soc_S_virtio_mmio_a003600_FULL_NAME_UNQUOTED virtio_mmio@a003600
#define DT_N_S_soc_S_virtio_mmio_a003600_FULL_NAME_TOKEN virtio_mmio_a003600
#define DT_N_S_soc_S_virtio_mmio_a003600_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003600

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003600_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003600_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003600_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_NODELABEL(fn) fn(virtio_mmio27)
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio27, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003600_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003600_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003600_HASH K0mtnZfZ5NoI56NrrGW4wx7SU7T60zlZumfb_EVa0vI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003600_ORD 41
#define DT_N_S_soc_S_virtio_mmio_a003600_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003600_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003600_EXISTS 1
#define DT_N_INST_27_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003600
#define DT_N_NODELABEL_virtio_mmio27 DT_N_S_soc_S_virtio_mmio_a003600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003600_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_REG_IDX_0_VAL_ADDRESS 167785984 /* 0xa003600 */
#define DT_N_S_soc_S_virtio_mmio_a003600_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003600_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_irq 75
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003600_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003600_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003600_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003600, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003600, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg {0 /* 0x0 */, 167785984 /* 0xa003600 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_1 167785984
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003600_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts {0 /* 0x0 */, 43 /* 0x2b */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_1 43
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003800
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003800
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003800_PATH "/soc/virtio_mmio@a003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003800_FULL_NAME "virtio_mmio@a003800"
#define DT_N_S_soc_S_virtio_mmio_a003800_FULL_NAME_UNQUOTED virtio_mmio@a003800
#define DT_N_S_soc_S_virtio_mmio_a003800_FULL_NAME_TOKEN virtio_mmio_a003800
#define DT_N_S_soc_S_virtio_mmio_a003800_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003800_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_NODELABEL(fn) fn(virtio_mmio28)
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio28, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003800_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003800_HASH bVwNHJbTawVM7i1DTy8KiTWjK8rLuzKjIUMNkWGtgEk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003800_ORD 42
#define DT_N_S_soc_S_virtio_mmio_a003800_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003800_EXISTS 1
#define DT_N_INST_28_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003800
#define DT_N_NODELABEL_virtio_mmio28 DT_N_S_soc_S_virtio_mmio_a003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003800_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_REG_IDX_0_VAL_ADDRESS 167786496 /* 0xa003800 */
#define DT_N_S_soc_S_virtio_mmio_a003800_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003800_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_irq 76
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003800_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003800, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003800, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg {0 /* 0x0 */, 167786496 /* 0xa003800 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_1 167786496
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts {0 /* 0x0 */, 44 /* 0x2c */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_1 44
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003a00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003a00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_PATH "/soc/virtio_mmio@a003a00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_FULL_NAME "virtio_mmio@a003a00"
#define DT_N_S_soc_S_virtio_mmio_a003a00_FULL_NAME_UNQUOTED virtio_mmio@a003a00
#define DT_N_S_soc_S_virtio_mmio_a003a00_FULL_NAME_TOKEN virtio_mmio_a003a00
#define DT_N_S_soc_S_virtio_mmio_a003a00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003A00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_NODELABEL(fn) fn(virtio_mmio29)
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio29, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003a00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_HASH TeCnU3285FZbrpvLtNADav1QbyoOoETr59Wg7kSKC74

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_ORD 43
#define DT_N_S_soc_S_virtio_mmio_a003a00_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_EXISTS 1
#define DT_N_INST_29_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003a00
#define DT_N_NODELABEL_virtio_mmio29 DT_N_S_soc_S_virtio_mmio_a003a00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_REG_IDX_0_VAL_ADDRESS 167787008 /* 0xa003a00 */
#define DT_N_S_soc_S_virtio_mmio_a003a00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003a00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_irq 77
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003a00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003a00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003a00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003a00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003a00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003a00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003a00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg {0 /* 0x0 */, 167787008 /* 0xa003a00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_1 167787008
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts {0 /* 0x0 */, 45 /* 0x2d */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_1 45
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003a00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003c00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003c00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_PATH "/soc/virtio_mmio@a003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_FULL_NAME "virtio_mmio@a003c00"
#define DT_N_S_soc_S_virtio_mmio_a003c00_FULL_NAME_UNQUOTED virtio_mmio@a003c00
#define DT_N_S_soc_S_virtio_mmio_a003c00_FULL_NAME_TOKEN virtio_mmio_a003c00
#define DT_N_S_soc_S_virtio_mmio_a003c00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_NODELABEL(fn) fn(virtio_mmio30)
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio30, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003c00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_HASH xFfGlX8R9dSNKQ2Ei0cYsJYPF1oC5J92OZmnadUVemw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_ORD 44
#define DT_N_S_soc_S_virtio_mmio_a003c00_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_EXISTS 1
#define DT_N_INST_30_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003c00
#define DT_N_NODELABEL_virtio_mmio30 DT_N_S_soc_S_virtio_mmio_a003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_REG_IDX_0_VAL_ADDRESS 167787520 /* 0xa003c00 */
#define DT_N_S_soc_S_virtio_mmio_a003c00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003c00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_irq 78
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003c00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003c00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg {0 /* 0x0 */, 167787520 /* 0xa003c00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_1 167787520
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts {0 /* 0x0 */, 46 /* 0x2e */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_1 46
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/virtio_mmio@a003e00
 *
 * Node identifier: DT_N_S_soc_S_virtio_mmio_a003e00
 *
 * Binding (compatible = virtio,mmio):
 *   $ZEPHYR_BASE/dts/bindings/virtio/virtio,mmio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_PATH "/soc/virtio_mmio@a003e00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_FULL_NAME "virtio_mmio@a003e00"
#define DT_N_S_soc_S_virtio_mmio_a003e00_FULL_NAME_UNQUOTED virtio_mmio@a003e00
#define DT_N_S_soc_S_virtio_mmio_a003e00_FULL_NAME_TOKEN virtio_mmio_a003e00
#define DT_N_S_soc_S_virtio_mmio_a003e00_FULL_NAME_UPPER_TOKEN VIRTIO_MMIO_A003E00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_NODELABEL_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_NODELABEL(fn) fn(virtio_mmio31)
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_NODELABEL_VARGS(fn, ...) fn(virtio_mmio31, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_virtio_mmio_a003e00_CHILD_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_HASH b8ojkYJy8cYu85wh_JYZr0_Q8CD_xIBLjDs7ec01fY8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_ORD 45
#define DT_N_S_soc_S_virtio_mmio_a003e00_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_EXISTS 1
#define DT_N_INST_31_virtio_mmio     DT_N_S_soc_S_virtio_mmio_a003e00
#define DT_N_NODELABEL_virtio_mmio31 DT_N_S_soc_S_virtio_mmio_a003e00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_REG_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_REG_IDX_0_VAL_ADDRESS 167788032 /* 0xa003e00 */
#define DT_N_S_soc_S_virtio_mmio_a003e00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_virtio_mmio_a003e00_RANGES_NUM 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_NUM 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_virtio_mmio_a003e00_IRQ_LEVEL 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_COMPAT_MATCHES_virtio_mmio 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_COMPAT_VENDOR_IDX_0 "Virtual I/O Device Specification, developed by the OASIS consortium"
#define DT_N_S_soc_S_virtio_mmio_a003e00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_COMPAT_MODEL_IDX_0 "mmio"
#define DT_N_S_soc_S_virtio_mmio_a003e00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003e00, status, 0)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003e00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_status_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible {"virtio,mmio"}
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_IDX_0 "virtio,mmio"
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_IDX_0_STRING_UNQUOTED virtio,mmio
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_IDX_0_STRING_TOKEN virtio_mmio
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_IDX_0_STRING_UPPER_TOKEN VIRTIO_MMIO
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_virtio_mmio_a003e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_virtio_mmio_a003e00, compatible, 0)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_virtio_mmio_a003e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_virtio_mmio_a003e00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_LEN 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg {0 /* 0x0 */, 167788032 /* 0xa003e00 */, 0 /* 0x0 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_1 167788032
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_2 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_IDX_3 512
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_reg_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts {0 /* 0x0 */, 47 /* 0x2f */, 2 /* 0x2 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_1 47
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_2 2
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_IDX_3 160
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_wakeup_source 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_virtio_mmio_a003e00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@8000000/its@8080000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000
 *
 * Binding (compatible = arm,gic-v3-its):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,gic-v3-its.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_PATH "/soc/interrupt-controller@8000000/its@8080000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FULL_NAME "its@8080000"
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FULL_NAME_UNQUOTED its@8080000
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FULL_NAME_TOKEN its_8080000
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FULL_NAME_UPPER_TOKEN ITS_8080000

/* Node parent (/soc/interrupt-controller@8000000) identifier: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_PARENT DT_N_S_soc_S_interrupt_controller_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_NODELABEL(fn) fn(its)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_NODELABEL_VARGS(fn, ...) fn(its, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_HASH HdF00ogqj8Vz1mEZZXmaZeHGb9Y2xAxkbxr65bE_2hc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_ORD 46
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_REQUIRES_ORDS \
	5, /* /soc/interrupt-controller@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_SUPPORTS_ORDS \
	47, /* /soc/pcie@4010000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_EXISTS 1
#define DT_N_INST_0_arm_gic_v3_its DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000
#define DT_N_NODELABEL_its         DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_REG_IDX_0_VAL_ADDRESS 134742016 /* 0x8080000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_COMPAT_MATCHES_arm_gic_v3_its 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_COMPAT_MODEL_IDX_0 "gic-v3-its"
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg {0 /* 0x0 */, 134742016 /* 0x8080000 */, 0 /* 0x0 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_1 134742016
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_2 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_IDX_3 131072
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible {"arm,gic-v3-its"}
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_IDX_0 "arm,gic-v3-its"
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_IDX_0_STRING_UNQUOTED arm,gic-v3-its
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_IDX_0_STRING_TOKEN arm_gic_v3_its
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_GIC_V3_ITS
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pcie@4010000000
 *
 * Node identifier: DT_N_S_soc_S_pcie_4010000000
 *
 * Binding (compatible = pci-host-ecam-generic):
 *   $ZEPHYR_BASE/dts/bindings/pcie/host/pci-host-ecam-generic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcie_4010000000_PATH "/soc/pcie@4010000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcie_4010000000_FULL_NAME "pcie@4010000000"
#define DT_N_S_soc_S_pcie_4010000000_FULL_NAME_UNQUOTED pcie@4010000000
#define DT_N_S_soc_S_pcie_4010000000_FULL_NAME_TOKEN pcie_4010000000
#define DT_N_S_soc_S_pcie_4010000000_FULL_NAME_UPPER_TOKEN PCIE_4010000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pcie_4010000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcie_4010000000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcie_4010000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_NODELABEL(fn) fn(pcie)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcie, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcie_4010000000_CHILD_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pcie_4010000000_HASH tzanhStoNsIEzZvi23oa1aXNEqJjVDWm2Fo2LawEJ90

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcie_4010000000_ORD 47
#define DT_N_S_soc_S_pcie_4010000000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcie_4010000000_REQUIRES_ORDS \
	4, /* /soc */ \
	46, /* /soc/interrupt-controller@8000000/its@8080000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcie_4010000000_SUPPORTS_ORDS \
	48, /* /soc/pcie@4010000000/pcie@1,0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcie_4010000000_EXISTS 1
#define DT_N_INST_0_pci_host_ecam_generic DT_N_S_soc_S_pcie_4010000000
#define DT_N_NODELABEL_pcie               DT_N_S_soc_S_pcie_4010000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcie_4010000000_REG_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_REG_IDX_0_VAL_ADDRESS 275146342400 /* 0x4010000000 */
#define DT_N_S_soc_S_pcie_4010000000_REG_IDX_0_VAL_SIZE 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_NUM 3
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_VAL_CHILD_BUS_FLAGS_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_VAL_CHILD_BUS_FLAGS 16777216 /* 0x1000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 1056899072 /* 0x3eff0000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_0_VAL_LENGTH 65536 /* 0x10000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_VAL_CHILD_BUS_FLAGS_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_VAL_CHILD_BUS_FLAGS 33554432 /* 0x2000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_VAL_CHILD_BUS_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_VAL_PARENT_BUS_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_1_VAL_LENGTH 788463616 /* 0x2eff0000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_VAL_CHILD_BUS_FLAGS_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_VAL_CHILD_BUS_FLAGS 50331648 /* 0x3000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_VAL_CHILD_BUS_ADDRESS 549755813888 /* 0x8000000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_VAL_PARENT_BUS_ADDRESS 549755813888 /* 0x8000000000 */
#define DT_N_S_soc_S_pcie_4010000000_RANGES_IDX_2_VAL_LENGTH 549755813888 /* 0x8000000000 */
#define DT_N_S_soc_S_pcie_4010000000_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_pcie_4010000000, 0) fn(DT_N_S_soc_S_pcie_4010000000, 1) fn(DT_N_S_soc_S_pcie_4010000000, 2)
#define DT_N_S_soc_S_pcie_4010000000_IRQ_NUM 0
#define DT_N_S_soc_S_pcie_4010000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pcie_4010000000_COMPAT_MATCHES_pci_host_ecam_generic 1
#define DT_N_S_soc_S_pcie_4010000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcie_4010000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcie_4010000000_P_reg {64 /* 0x40 */, 268435456 /* 0x10000000 */, 0 /* 0x0 */, 268435456 /* 0x10000000 */}
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_0 64
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_1 268435456
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_2 0
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_reg_IDX_3 268435456
#define DT_N_S_soc_S_pcie_4010000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000, msi_parent, 0)
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000, msi_parent, 0)
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000, msi_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000, msi_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_LEN 1
#define DT_N_S_soc_S_pcie_4010000000_P_msi_parent_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges {16777216 /* 0x1000000 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1056899072 /* 0x3eff0000 */, 0 /* 0x0 */, 65536 /* 0x10000 */, 33554432 /* 0x2000000 */, 0 /* 0x0 */, 268435456 /* 0x10000000 */, 0 /* 0x0 */, 268435456 /* 0x10000000 */, 0 /* 0x0 */, 788463616 /* 0x2eff0000 */, 50331648 /* 0x3000000 */, 128 /* 0x80 */, 0 /* 0x0 */, 128 /* 0x80 */, 0 /* 0x0 */, 128 /* 0x80 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_0 16777216
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_1 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_2 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_3 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_4 1056899072
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_5 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_6 65536
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_7 33554432
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_8 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_9 268435456
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_10 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_11 268435456
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_12 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_13 788463616
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_14_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_14 50331648
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_15_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_15 128
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_16_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_16 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_17_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_17 128
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_18_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_18 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_19_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_19 128
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_20_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_IDX_20 0
#define DT_N_S_soc_S_pcie_4010000000_P_ranges_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask {6144 /* 0x1800 */, 0 /* 0x0 */, 0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_0 6144
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_1 0
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_2 0
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_IDX_3 7
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 0) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 1) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 2) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 3)
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 3)
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, interrupt_map_mask, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_LEN 4
#define DT_N_S_soc_S_pcie_4010000000_P_interrupt_map_mask_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range {0 /* 0x0 */, 255 /* 0xff */}
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_IDX_0 0
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_IDX_1 255
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 0) \
	fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 1)
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 1)
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcie_4010000000, bus_range, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_LEN 2
#define DT_N_S_soc_S_pcie_4010000000_P_bus_range_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_compatible {"pci-host-ecam-generic"}
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_IDX_0 "pci-host-ecam-generic"
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_IDX_0_STRING_UNQUOTED pci-host-ecam-generic
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_IDX_0_STRING_TOKEN pci_host_ecam_generic
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_IDX_0_STRING_UPPER_TOKEN PCI_HOST_ECAM_GENERIC
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000, compatible, 0)
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000, compatible, 0)
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pcie_4010000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcie_4010000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_wakeup_source 0
#define DT_N_S_soc_S_pcie_4010000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcie_4010000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pcie@4010000000/pcie@1,0
 *
 * Node identifier: DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0
 *
 * Binding (compatible = intel,e1000):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/intel,e1000.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_PATH "/soc/pcie@4010000000/pcie@1,0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FULL_NAME "pcie@1,0"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FULL_NAME_UNQUOTED pcie@1,0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FULL_NAME_TOKEN pcie_1_0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FULL_NAME_UPPER_TOKEN PCIE_1_0

/* Node parent (/soc/pcie@4010000000) identifier: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_PARENT DT_N_S_soc_S_pcie_4010000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_NODELABEL(fn) fn(eth0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pcie_4010000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_CHILD_NUM 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_HASH O0N4CIBHPUkrt2vJtWu41nzIkXjx9A8ivBx3xKy_JzM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_ORD 48
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_REQUIRES_ORDS \
	5, /* /soc/interrupt-controller@8000000 */ \
	47, /* /soc/pcie@4010000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_EXISTS 1
#define DT_N_INST_0_intel_e1000 DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0
#define DT_N_NODELABEL_eth0     DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0

/* Bus info (controller: '/soc/pcie@4010000000', type: '['pcie']') */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_BUS_pcie 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_BUS DT_N_S_soc_S_pcie_4010000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_REG_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_REG_IDX_0_VAL_ADDRESS 37778931862957161709568 /* 0x8000000000000000000 */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_REG_IDX_0_VAL_SIZE 0 /* 0x0 */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_RANGES_NUM 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_NUM 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_type 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_flags 4
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_priority 160
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_8000000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_IRQ_LEVEL 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_COMPAT_MATCHES_intel_e1000 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_COMPAT_VENDOR_IDX_0 "Intel Corporation"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_COMPAT_MODEL_IDX_0 "e1000"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupts {1 /* 0x1 */}
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status "okay"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, status, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, status, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_LEN 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_status_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible {"intel,e1000"}
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_IDX_0 "intel,e1000"
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_IDX_0_STRING_UNQUOTED intel,e1000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_IDX_0_STRING_TOKEN intel_e1000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_IDX_0_STRING_UPPER_TOKEN INTEL_E1000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, compatible, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, compatible, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_LEN 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg {2048 /* 0x800 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_0 2048
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_1 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_2 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_3 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_IDX_4 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent DT_N_S_soc_S_pcie_4010000000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_IDX_0 DT_N_S_soc_S_pcie_4010000000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_pcie_4010000000
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, interrupt_parent, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, interrupt_parent, 0)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_wakeup_source 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_vendor_id 32902
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_vendor_id_EXISTS 1
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_device_id 4110
#define DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0_P_device_id_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram                   DT_N_S_soc_S_memory_40000000
#define DT_CHOSEN_zephyr_sram_EXISTS            1
#define DT_CHOSEN_zephyr_console                DT_N_S_soc_S_uart_9000000
#define DT_CHOSEN_zephyr_console_EXISTS         1
#define DT_CHOSEN_zephyr_shell_uart             DT_N_S_soc_S_uart_9000000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS      1
#define DT_CHOSEN_zephyr_flash                  DT_N_S_soc_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS           1
#define DT_CHOSEN_zephyr_pcie_controller        DT_N_S_soc_S_pcie_4010000000
#define DT_CHOSEN_zephyr_pcie_controller_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_8000000) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000) fn(DT_N_S_soc_S_uart_9000000) fn(DT_N_S_soc_S_flash_0) fn(DT_N_S_soc_S_pcie_4010000000) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0) fn(DT_N_S_soc_S_memory_40000000) fn(DT_N_S_soc_S_virtio_mmio_a000000) fn(DT_N_S_soc_S_virtio_mmio_a000200) fn(DT_N_S_soc_S_virtio_mmio_a000400) fn(DT_N_S_soc_S_virtio_mmio_a000600) fn(DT_N_S_soc_S_virtio_mmio_a000800) fn(DT_N_S_soc_S_virtio_mmio_a000a00) fn(DT_N_S_soc_S_virtio_mmio_a000c00) fn(DT_N_S_soc_S_virtio_mmio_a000e00) fn(DT_N_S_soc_S_virtio_mmio_a001000) fn(DT_N_S_soc_S_virtio_mmio_a001200) fn(DT_N_S_soc_S_virtio_mmio_a001400) fn(DT_N_S_soc_S_virtio_mmio_a001600) fn(DT_N_S_soc_S_virtio_mmio_a001800) fn(DT_N_S_soc_S_virtio_mmio_a001a00) fn(DT_N_S_soc_S_virtio_mmio_a001c00) fn(DT_N_S_soc_S_virtio_mmio_a001e00) fn(DT_N_S_soc_S_virtio_mmio_a002000) fn(DT_N_S_soc_S_virtio_mmio_a002200) fn(DT_N_S_soc_S_virtio_mmio_a002400) fn(DT_N_S_soc_S_virtio_mmio_a002600) fn(DT_N_S_soc_S_virtio_mmio_a002800) fn(DT_N_S_soc_S_virtio_mmio_a002a00) fn(DT_N_S_soc_S_virtio_mmio_a002c00) fn(DT_N_S_soc_S_virtio_mmio_a002e00) fn(DT_N_S_soc_S_virtio_mmio_a003000) fn(DT_N_S_soc_S_virtio_mmio_a003200) fn(DT_N_S_soc_S_virtio_mmio_a003400) fn(DT_N_S_soc_S_virtio_mmio_a003600) fn(DT_N_S_soc_S_virtio_mmio_a003800) fn(DT_N_S_soc_S_virtio_mmio_a003a00) fn(DT_N_S_soc_S_virtio_mmio_a003c00) fn(DT_N_S_soc_S_virtio_mmio_a003e00) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_timer) fn(DT_N_S_apb_pclk) fn(DT_N_S_psci)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_8000000) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000) fn(DT_N_S_soc_S_uart_9000000) fn(DT_N_S_soc_S_flash_0) fn(DT_N_S_soc_S_pcie_4010000000) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0) fn(DT_N_S_soc_S_memory_40000000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_timer) fn(DT_N_S_apb_pclk) fn(DT_N_S_psci)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a000e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a001e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a002e00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003000, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003200, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003400, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003600, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003800, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003a00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003c00, __VA_ARGS__) fn(DT_N_S_soc_S_virtio_mmio_a003e00, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_timer, __VA_ARGS__) fn(DT_N_S_apb_pclk, __VA_ARGS__) fn(DT_N_S_psci, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_timer, __VA_ARGS__) fn(DT_N_S_apb_pclk, __VA_ARGS__) fn(DT_N_S_psci, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_qemu_arm_cortex_a53 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_gic_v3 1
#define DT_COMPAT_HAS_OKAY_arm_gic 1
#define DT_COMPAT_HAS_OKAY_arm_gic_v3_its 1
#define DT_COMPAT_HAS_OKAY_arm_pl011 1
#define DT_COMPAT_HAS_OKAY_cfi_flash 1
#define DT_COMPAT_HAS_OKAY_pci_host_ecam_generic 1
#define DT_COMPAT_HAS_OKAY_intel_e1000 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_a53 1
#define DT_COMPAT_HAS_OKAY_arm_armv8_timer 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_arm_psci_0_2 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_qemu_arm_cortex_a53_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_gic_v3_NUM_OKAY 1
#define DT_N_INST_arm_gic_NUM_OKAY 1
#define DT_N_INST_arm_gic_v3_its_NUM_OKAY 1
#define DT_N_INST_arm_pl011_NUM_OKAY 1
#define DT_N_INST_cfi_flash_NUM_OKAY 1
#define DT_N_INST_pci_host_ecam_generic_NUM_OKAY 1
#define DT_N_INST_intel_e1000_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_arm_cortex_a53_NUM_OKAY 2
#define DT_N_INST_arm_armv8_timer_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_arm_psci_0_2_NUM_OKAY 1
#define DT_FOREACH_OKAY_qemu_arm_cortex_a53(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_qemu_arm_cortex_a53(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_qemu_arm_cortex_a53(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_qemu_arm_cortex_a53(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_gic_v3(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000)
#define DT_FOREACH_OKAY_VARGS_arm_gic_v3(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_gic_v3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_gic_v3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_gic(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000)
#define DT_FOREACH_OKAY_VARGS_arm_gic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_gic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_gic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_gic_v3_its(fn) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000)
#define DT_FOREACH_OKAY_VARGS_arm_gic_v3_its(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_8000000_S_its_8080000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_gic_v3_its(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_gic_v3_its(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_pl011(fn) fn(DT_N_S_soc_S_uart_9000000)
#define DT_FOREACH_OKAY_VARGS_arm_pl011(fn, ...) fn(DT_N_S_soc_S_uart_9000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_pl011(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_pl011(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_cfi_flash(fn) fn(DT_N_S_soc_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_cfi_flash(fn, ...) fn(DT_N_S_soc_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_cfi_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_cfi_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pci_host_ecam_generic(fn) fn(DT_N_S_soc_S_pcie_4010000000)
#define DT_FOREACH_OKAY_VARGS_pci_host_ecam_generic(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pci_host_ecam_generic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pci_host_ecam_generic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_intel_e1000(fn) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0)
#define DT_FOREACH_OKAY_VARGS_intel_e1000(fn, ...) fn(DT_N_S_soc_S_pcie_4010000000_S_pcie_1_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_intel_e1000(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_intel_e1000(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_40000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_a53(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_a53(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_a53(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_a53(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8_timer(fn) fn(DT_N_S_timer)
#define DT_FOREACH_OKAY_VARGS_arm_armv8_timer(fn, ...) fn(DT_N_S_timer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_apb_pclk)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_apb_pclk, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_psci_0_2(fn) fn(DT_N_S_psci)
#define DT_FOREACH_OKAY_VARGS_arm_psci_0_2(fn, ...) fn(DT_N_S_psci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_psci_0_2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_psci_0_2(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_intel_e1000_BUS_pcie 1
